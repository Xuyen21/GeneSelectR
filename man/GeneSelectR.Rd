% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GeneSelectR.R
\name{GeneSelectR}
\alias{GeneSelectR}
\title{Gene Selection and Evaluation with GeneSelectR}
\usage{
GeneSelectR(
  X_train,
  y_train,
  pipelines = NULL,
  feature_selection_methods = NULL,
  selected_methods = NULL,
  testsize = 0.2,
  njobs = -1L,
  n_splits = 2L
)
}
\arguments{
\item{X_train}{A matrix or data frame of training data with features as columns and observations as rows.}

\item{y_train}{A vector of training labels corresponding to the rows of X_train.}

\item{pipelines}{An optional list of pre-defined pipelines to use for fitting and evaluation. If this argument is provided, the feature selection methods and preprocessing steps will be ignored.}

\item{feature_selection_methods}{An optional list of feature selection methods to use for fitting and evaluation. If this argument is not provided, a default set of feature selection methods will be used.}

\item{selected_methods}{An optional vector of names of feature selection methods to use from the default set. If this argument is provided, only the specified methods will be used.}

\item{testsize}{The size of the test set used in the evaluation.}

\item{njobs}{Number of jobs to run in parallel.}

\item{n_splits}{Number of train/test splits.}
}
\value{
A list with the following elements:
\item{fitted_pipelines}{A list of the fitted pipelines.}
\item{cv_results}{A list of the cross-validation results for each pipeline.}
}
\description{
This function performs gene selection using different methods on a given training set and evaluates their performance using cross-validation.
}
\examples{
\dontrun{
# Perform gene selection and evaluation using the default methods
data(iris)
X <- iris[,1:4]
y <- iris[,5]
results <- GeneSelectR(X_train = X, y_train = y)

# Perform gene selection and evaluation using a subset of the default methods
results <- GeneSelectR(X_train = X, y_train = y, selected_methods = c("Univariate", "RFE"))

# Perform gene selection and evaluation using user-defined methods
fs_methods <- list("Lasso" = select_model(lasso(penalty = 'l1', C = 0.1, solver = 'saga'), threshold = 'median'))
results <- GeneSelectR(X_train = X, y_train = y, feature_selection_methods = fs_methods)
}
}
